// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: modelGenerator.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ModelGenerator {
  public static partial class ModelGeneration
  {
    static readonly string __ServiceName = "ModelGenerator.ModelGeneration";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.ImageRequest> __Marshaller_ModelGenerator_ImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.ImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.ImageResponse> __Marshaller_ModelGenerator_ImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.ImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.LoadDatasetRequest> __Marshaller_ModelGenerator_LoadDatasetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.LoadDatasetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.LoadDatasetResponse> __Marshaller_ModelGenerator_LoadDatasetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.LoadDatasetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.TrainModelRequest> __Marshaller_ModelGenerator_TrainModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.TrainModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.TrainModelResponse> __Marshaller_ModelGenerator_TrainModelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.TrainModelResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.LoadModelRequest> __Marshaller_ModelGenerator_LoadModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.LoadModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ModelGenerator.LoadModelResponse> __Marshaller_ModelGenerator_LoadModelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ModelGenerator.LoadModelResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ModelGenerator.ImageRequest, global::ModelGenerator.ImageResponse> __Method_GenerateImage = new grpc::Method<global::ModelGenerator.ImageRequest, global::ModelGenerator.ImageResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "GenerateImage",
        __Marshaller_ModelGenerator_ImageRequest,
        __Marshaller_ModelGenerator_ImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ModelGenerator.LoadDatasetRequest, global::ModelGenerator.LoadDatasetResponse> __Method_LoadDataset = new grpc::Method<global::ModelGenerator.LoadDatasetRequest, global::ModelGenerator.LoadDatasetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoadDataset",
        __Marshaller_ModelGenerator_LoadDatasetRequest,
        __Marshaller_ModelGenerator_LoadDatasetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ModelGenerator.TrainModelRequest, global::ModelGenerator.TrainModelResponse> __Method_TrainModel = new grpc::Method<global::ModelGenerator.TrainModelRequest, global::ModelGenerator.TrainModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrainModel",
        __Marshaller_ModelGenerator_TrainModelRequest,
        __Marshaller_ModelGenerator_TrainModelResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ModelGenerator.LoadModelRequest, global::ModelGenerator.LoadModelResponse> __Method_LoadModel = new grpc::Method<global::ModelGenerator.LoadModelRequest, global::ModelGenerator.LoadModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoadModel",
        __Marshaller_ModelGenerator_LoadModelRequest,
        __Marshaller_ModelGenerator_LoadModelResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ModelGenerator.ModelGeneratorReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ModelGeneration</summary>
    [grpc::BindServiceMethod(typeof(ModelGeneration), "BindService")]
    public abstract partial class ModelGenerationBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GenerateImage(grpc::IAsyncStreamReader<global::ModelGenerator.ImageRequest> requestStream, grpc::IServerStreamWriter<global::ModelGenerator.ImageResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ModelGenerator.LoadDatasetResponse> LoadDataset(global::ModelGenerator.LoadDatasetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ModelGenerator.TrainModelResponse> TrainModel(global::ModelGenerator.TrainModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// - Delete Model // Could be used later
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ModelGenerator.LoadModelResponse> LoadModel(global::ModelGenerator.LoadModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ModelGeneration</summary>
    public partial class ModelGenerationClient : grpc::ClientBase<ModelGenerationClient>
    {
      /// <summary>Creates a new client for ModelGeneration</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelGenerationClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ModelGeneration that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelGenerationClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelGenerationClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelGenerationClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::ModelGenerator.ImageRequest, global::ModelGenerator.ImageResponse> GenerateImage(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateImage(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::ModelGenerator.ImageRequest, global::ModelGenerator.ImageResponse> GenerateImage(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_GenerateImage, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.LoadDatasetResponse LoadDataset(global::ModelGenerator.LoadDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadDataset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.LoadDatasetResponse LoadDataset(global::ModelGenerator.LoadDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoadDataset, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.LoadDatasetResponse> LoadDatasetAsync(global::ModelGenerator.LoadDatasetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadDatasetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.LoadDatasetResponse> LoadDatasetAsync(global::ModelGenerator.LoadDatasetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoadDataset, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.TrainModelResponse TrainModel(global::ModelGenerator.TrainModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.TrainModelResponse TrainModel(global::ModelGenerator.TrainModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainModel, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.TrainModelResponse> TrainModelAsync(global::ModelGenerator.TrainModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.TrainModelResponse> TrainModelAsync(global::ModelGenerator.TrainModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainModel, null, options, request);
      }
      /// <summary>
      /// - Delete Model // Could be used later
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.LoadModelResponse LoadModel(global::ModelGenerator.LoadModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// - Delete Model // Could be used later
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ModelGenerator.LoadModelResponse LoadModel(global::ModelGenerator.LoadModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoadModel, null, options, request);
      }
      /// <summary>
      /// - Delete Model // Could be used later
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.LoadModelResponse> LoadModelAsync(global::ModelGenerator.LoadModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoadModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// - Delete Model // Could be used later
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ModelGenerator.LoadModelResponse> LoadModelAsync(global::ModelGenerator.LoadModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoadModel, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ModelGenerationClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ModelGenerationClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ModelGenerationBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GenerateImage, serviceImpl.GenerateImage)
          .AddMethod(__Method_LoadDataset, serviceImpl.LoadDataset)
          .AddMethod(__Method_TrainModel, serviceImpl.TrainModel)
          .AddMethod(__Method_LoadModel, serviceImpl.LoadModel).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ModelGenerationBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GenerateImage, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::ModelGenerator.ImageRequest, global::ModelGenerator.ImageResponse>(serviceImpl.GenerateImage));
      serviceBinder.AddMethod(__Method_LoadDataset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ModelGenerator.LoadDatasetRequest, global::ModelGenerator.LoadDatasetResponse>(serviceImpl.LoadDataset));
      serviceBinder.AddMethod(__Method_TrainModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ModelGenerator.TrainModelRequest, global::ModelGenerator.TrainModelResponse>(serviceImpl.TrainModel));
      serviceBinder.AddMethod(__Method_LoadModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ModelGenerator.LoadModelRequest, global::ModelGenerator.LoadModelResponse>(serviceImpl.LoadModel));
    }

  }
}
#endregion
