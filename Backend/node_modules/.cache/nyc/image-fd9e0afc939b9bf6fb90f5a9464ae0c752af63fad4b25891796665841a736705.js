'use strict';/**
 * Handles the Post request of a user updating their co-ordinates and will return a generated image
 * @param {has the data passed through from the POST request} data 
 * @param {request object} req 
 * @param {response object} res 
 */function cov_1d741mmli4(){var path="C:\\Users\\James Jagger\\Documents\\GitHub\\AR-VR-GAN\\Backend\\Server\\handlers\\image.js";var hash="fc4905ba6294cf8b3702acc4b34ae46f3bb14149";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\James Jagger\\Documents\\GitHub\\AR-VR-GAN\\Backend\\Server\\handlers\\image.js",statementMap:{"0":{start:{line:10,column:4},end:{line:10,column:30}},"1":{start:{line:13,column:0},end:{line:13,column:22}}},fnMap:{"0":{name:"image",decl:{start:{line:8,column:9},end:{line:8,column:14}},loc:{start:{line:8,column:28},end:{line:11,column:1}},line:8}},branchMap:{},s:{"0":0,"1":0},f:{"0":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"fc4905ba6294cf8b3702acc4b34ae46f3bb14149"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1d741mmli4=function(){return actualCoverage;};}return actualCoverage;}cov_1d741mmli4();function image(data,req,res){cov_1d741mmli4().f[0]++;cov_1d741mmli4().s[0]++;// TODO: communicate with Neural network and Unreal scripts
res.status(200).send(data);}cov_1d741mmli4().s[1]++;module.exports=image;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLmpzIl0sIm5hbWVzIjpbImltYWdlIiwiZGF0YSIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHLHM2QkFTWTsyRkFSWixRQUFTQSxDQUFBQSxLQUFULENBQWVDLElBQWYsQ0FBb0JDLEdBQXBCLENBQXdCQyxHQUF4QixDQUE0QixpREFDeEI7QUFDQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJKLElBQXJCLEVBQ0gsQyx3QkFFREssTUFBTSxDQUFDQyxPQUFQLENBQWlCUCxLQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xyXG4vKipcclxuICogSGFuZGxlcyB0aGUgUG9zdCByZXF1ZXN0IG9mIGEgdXNlciB1cGRhdGluZyB0aGVpciBjby1vcmRpbmF0ZXMgYW5kIHdpbGwgcmV0dXJuIGEgZ2VuZXJhdGVkIGltYWdlXHJcbiAqIEBwYXJhbSB7aGFzIHRoZSBkYXRhIHBhc3NlZCB0aHJvdWdoIGZyb20gdGhlIFBPU1QgcmVxdWVzdH0gZGF0YSBcclxuICogQHBhcmFtIHtyZXF1ZXN0IG9iamVjdH0gcmVxIFxyXG4gKiBAcGFyYW0ge3Jlc3BvbnNlIG9iamVjdH0gcmVzIFxyXG4gKi9cclxuZnVuY3Rpb24gaW1hZ2UoZGF0YSxyZXEscmVzKXtcclxuICAgIC8vIFRPRE86IGNvbW11bmljYXRlIHdpdGggTmV1cmFsIG5ldHdvcmsgYW5kIFVucmVhbCBzY3JpcHRzXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChkYXRhKVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGltYWdlIl19